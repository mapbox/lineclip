'use strict';

var test = require('tap').test;
var clip = require('./');

test('clips line', function (t) {
    var result = clip([
        [-10, 10], [10, 10], [10, -10], [20, -10], [20, 10], [40, 10],
        [40, 20], [20, 20], [20, 40], [10, 40], [10, 20], [5, 20], [-10, 20]],
    [0, 0, 30, 30]);

    t.same(result, [
        [[0, 10], [10, 10], [10, 0]],
        [[20, 0], [20, 10], [30, 10]],
        [[30, 20], [20, 20], [20, 30]],
        [[10, 30], [10, 20], [5, 20], [0, 20]]
    ]);

    t.end();
});

test('clips line crossing through many times', function (t) {
    var result = clip([[10, -10], [10, 30], [20, 30], [20, -10]], [0, 0, 20, 20]);

    t.same(result, [
        [[10, 0], [10, 20]],
        [[20, 20], [20, 0]]
    ]);

    t.end();
});

test('clips polygon', function (t) {
    var result = clip.polygon([[-10, 10], [0, 10], [10, 10], [10, 5], [10, -5], [10, -10], [20, -10],
        [20, 10], [40, 10], [40, 20], [20, 20], [20, 40], [10, 40], [10, 20], [5, 20], [-10, 20]],
    [0, 0, 30, 30]);

    t.same(result, [[0, 10], [0, 10], [10, 10], [10, 5], [10, 0], [20, 0], [20, 10], [30, 10],
        [30, 20], [20, 20], [20, 30], [10, 30], [10, 20], [5, 20], [0, 20]]);

    t.end();
});

test('appends result if passed third argument', function (t) {
    var arr = [];
    var result = clip([[-10, 10], [30, 10]], [0, 0, 20, 20], arr);

    t.same(result, [[[0, 10], [20, 10]]]);
    t.equal(result, arr);

    t.end();
});

test('clips floating point lines', function (t) {
    var line = [
        [-86.66015624999999, 42.22851735620852], [-81.474609375, 38.51378825951165], [-85.517578125, 37.125286284966776],
        [-85.8251953125, 38.95940879245423], [-90.087890625, 39.53793974517628], [-91.93359375, 42.32606244456202],
        [-86.66015624999999, 42.22851735620852]];

    var bbox = [-91.93359375, 42.29356419217009, -91.7578125, 42.42345651793831];

    var result = clip(line, bbox);

    t.same(result, [[
        [-91.91208030440808, 42.29356419217009],
        [-91.93359375, 42.32606244456202],
        [-91.7578125, 42.3228109416169]
    ]]);

    t.end();
});

test('preserves line if no protrusions exist', function (t) {
    var result = clip([[1, 1], [2, 2], [3, 3]], [0, 0, 30, 30]);

    t.same(result, [[[1, 1], [2, 2], [3, 3]]]);

    t.end();
});

test('clips without leaving empty parts', function (t) {
    var result = clip([[40, 40], [50, 50]], [0, 0, 30, 30]);

    t.same(result, []);

    t.end();
});

test('still works when polygon never crosses bbox', function (t) {
    var result = clip.polygon([[3, 3], [5, 3], [5, 5], [3, 5], [3, 3]],
        [0, 0, 2, 2]);

    t.same(result, []);

    t.end();
});

test('"cleanArtefact" option : polygon clip top of bbox with two areas', function (t) {
    var result = clip.polygon([[1, 15], [3, 7], [5, 15], [6, 6], [8, 15], [5, 30], [1, 15]],
        [0, 1, 11, 10],
        true);

    t.same(result, [[[5.555555555555555, 10], [6, 6], [6.888888888888889, 10], [5.555555555555555, 10]], [[2.25, 10], [3, 7], [3.75, 10], [2.25, 10]]]);

    t.end();
});

test('"cleanArtefact" option : polygon clip bottom of bbox with two areas', function (t) {
    var result = clip.polygon([[1, -15], [3, -7], [5, -15], [6, -6], [8, -15], [5, -30], [1, -15]],
        [0, -10, 11, -1],
        true);

    t.same(result, [[[5.555555555555555, -10], [6, -6], [6.888888888888889, -10], [5.555555555555555, -10]], [[2.25, -10], [3, -7], [3.75, -10], [2.25, -10]]]);

    t.end();
});

test('"cleanArtefact" option : polygon clip right of bbox with two areas', function (t) {
    var result = clip.polygon([[15, 1], [7, 3], [15, 5], [6, 6], [15, 8], [30, 5], [15, 1]],
        [0, 1, 11, 10],
        true);

    t.same(result, [[[11, 5.444444444444445], [6, 6], [11, 7.111111111111111], [11, 5.444444444444445]], [[11, 2], [7, 3], [11, 4], [11, 2]]]);

    t.end();
});

test('"cleanArtefact" option : polygon clip left of bbox with two areas', function (t) {
    var result = clip.polygon([[-15, 1], [-7, 3], [-15, 5], [-6, 6], [-15, 8], [-30, 5], [-15, 1]],
        [-11, 1, 0, 10],
        true);

    t.same(result, [[[-11, 5.444444444444445], [-6, 6], [-11, 7.111111111111111], [-11, 5.444444444444445]], [[-11, 2], [-7, 3], [-11, 4], [-11, 2]]]);

    t.end();
});

console.log(JSON.stringify(clip.polygon([
    [-4.075259530220649, 49.10599518999791],
    [-4.154741542334875, 48.864160740490064],
    [-4.414864491072365, 48.83563245244247],
    [-4.508797778116502, 49.11545498463545],
    [-4.7978232767137, 49.124912975578866],
    [-4.711115627134518, 48.92591627662932],
    [-5.224135887144598, 48.86891387493128],
    [-5.188007699819934, 48.59726435960644],
    [-4.696664352204664, 48.391364015357],
    [-5.346971724048387, 48.28569621325656],
    [-5.296392261793869, 47.95286213134159],
    [-4.667761802344955, 47.77349733478934],
    [-4.508797778116502, 48.21352438733226],
    [-4.104162080080357, 48.17017239629013],
    [-4.313705566563385, 47.66655371059477],
    [-5.267489711934161, 47.49108141400549],
    [-5.823863796733804, 48.13160650090049],
    [-5.7371561471546215, 48.74518562275415],
    [-5.679351047435205, 49.27128125262996],
    [-4.075259530220649, 49.10599518999791]
],
[-5, 48, -4, 49])));

test('"cleanArtefact" option : polygon clip top and left of bbox with 4 areas', function (t) {
    var result = clip.polygon([
        [-4.075259530220649, 49.10599518999791],
        [-4.154741542334875, 48.864160740490064],
        [-4.414864491072365, 48.83563245244247],
        [-4.508797778116502, 49.11545498463545],
        [-4.7978232767137, 49.124912975578866],
        [-4.711115627134518, 48.92591627662932],
        [-5.224135887144598, 48.86891387493128],
        [-5.188007699819934, 48.59726435960644],
        [-4.696664352204664, 48.391364015357],
        [-5.346971724048387, 48.28569621325656],
        [-5.296392261793869, 47.95286213134159],
        [-4.667761802344955, 47.77349733478934],
        [-4.508797778116502, 48.21352438733226],
        [-4.104162080080357, 48.17017239629013],
        [-4.313705566563385, 47.66655371059477],
        [-5.267489711934161, 47.49108141400549],
        [-5.823863796733804, 48.13160650090049],
        [-5.7371561471546215, 48.74518562275415],
        [-5.679351047435205, 49.27128125262996],
        [-4.075259530220649, 49.10599518999791]
    ],
    [-5, 48, -4, 49],
    true);

    t.same(result, [
        [[-4.585935526091531, 48], [-4.508797778116502, 48.21352438733226], [-4.104162080080357, 48.17017239629013], [-4.174966675371674, 48], [-4.585935526091531, 48]],
        [[-5, 48.51847861781844], [-4.696664352204664, 48.391364015357], [-5, 48.342075305757454], [-5, 48.51847861781844]],
        [[-4.7433956878564025, 49], [-4.711115627134518, 48.92591627662932], [-5, 48.89381792818195], [-5, 49], [-4.7433956878564025, 49]],
        [[-4.110096217022751, 49], [-4.154741542334875, 48.864160740490064], [-4.414864491072365, 48.83563245244247], [-4.470040834108295, 49], [-4.110096217022751, 49]],
    ]);

    t.end();
});
